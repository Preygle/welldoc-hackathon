Physical Activity
Your hackathon guidelines allow collecting "Exercise routines" or "Step count".

If using minutes: Use the raw numeric column (e.g., exercise_minutes_per_week) directly in the model.

If using steps: Use the Step_count column.

To categorize (optional): You could also create a categorical feature like Activity_Level based on thresholds (e.g., Sedentary if steps <5000, Active if steps >10000).

Alcohol (Flags)
You need to collect data on alcohol consumption (part of "diet habits" ), such as 

drinks_per_week.

Alcohol_Use (Binary Flag): Create a binary feature:

Set to 1 if drinks_per_week >0.

Set to 0 if drinks_per_week =0.

Binge_Flag (Binary Flag): Create a binary feature based on standard definitions (e.g., ≥4 drinks in one session for women or ≥5 for men). If you only have weekly data, you may need to proxy this or collect more specific data.

Stress (Binary)
Your guidelines list "stress levels" as an input. This is typically collected via a subjective patient rating (e.g., 

stress_rating_1_to_10).

High_Stress (Binary): Create a binary feature by defining a threshold:

Set to 1 if stress_rating_1_to_10 is above a threshold (e.g., >6).

Set to 0 if the rating is ≤6.

Interaction Term: Stress × Sleep
This feature combines your new stress feature with your existing sleep data (sleep hour).

Define Poor Sleep: First, create a binary feature for poor sleep from your sleep hour column.

Poor_Sleep = 1 if sleep hour <7 (or another clinically relevant threshold).

Poor_Sleep = 0 if sleep hour ≥7.

Create Interaction Feature: Create the new interaction column by multiplying the two binary features you just created (High_Stress from the previous step and Poor_Sleep):

Stress_x_Poor_Sleep = High_Stress × Poor_Sleep

---
**Feature Engineering Documentation**

The following features were added or modified by the `add_features.py` script.

**I. Pre-processed Columns**

1.  **systolic_bp** & **diastolic_bp**:
    *   **Source**: Split from the 'BP' column (e.g., "120/80").
    *   **Type**: Numerical.

2.  **smoking_status**:
    *   **Source**: Extracted from the 'Medical History' column.
    *   **Type**: Categorical.

**II. Generated Pseudo-Columns (for demonstration)**

The following columns were randomly generated as they were not in the original dataset.

1.  **Step_count**: Random integer between 2,000 and 15,000.
2.  **drinks_per_week**: Random integer (0-20).
3.  **stress_rating_1_to_10**: Random integer (1-10).

**III. Engineered Features**

1.  **Activity_Level**:
    *   **Formula**:
        *   'Sedentary': if Step_count < 5000
        *   'Moderately Active': if 5000 <= Step_count < 10000
        *   'Active': if Step_count >= 10000
    *   **Note**: This column was later encoded to `0` (Sedentary), `1` (Moderately Active), and `2` (Active).

2.  **Alcohol_Use** (Binary):
    *   **Formula**: `1` if drinks_per_week > 0, else `0`.

3.  **Binge_Flag** (Binary Proxy):
    *   **Formula**:
        *   `1` if (gender is 'Female' AND drinks_per_week >= 4)
        *   `1` if (gender is 'Male' AND drinks_per_week >= 5)
        *   `0` otherwise.

4.  **High_Stress** (Binary):
    *   **Formula**: `1` if stress_rating_1_to_10 > 6, else `0`.

5.  **Poor_Sleep** (Binary):
    *   **Formula**: `1` if 'sleep hours' < 7, else `0`.

6.  **Stress_x_Poor_Sleep** (Interaction Term):
    *   **Formula**: `High_Stress` * `Poor_Sleep`.

**IV. Other Encodings**

1.  **gender**:
    *   **Mapping**: `1` for 'Male', `0` for 'Female'. 'Other' values were mapped to NaN.